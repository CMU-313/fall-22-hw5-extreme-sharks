name: Maven CI/CD

on:
  push


jobs:
  build_and_coverage_report:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "temurin"
          cache: maven
      - name: Install test dependencies
        run: sudo apt-get -y -q --no-install-recommends install ffmpeg mediainfo tesseract-ocr tesseract-ocr-deu
      - name: Build with Maven
        run: mvn -B clean test
      - name: Build with Maven Run Spotbugs
        run: mvn -B verify spotbugs:spotbugs
      - uses: jwgmeligmeyling/spotbugs-github-action@master
        with:
          path: '**/spotbugsXml.xml'

      - name: Generate JaCoCo Badge
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2
        with:
          generate-branches-badge: true
          jacoco-csv-file: >
            docs-core/target/site/jacoco/jacoco.csv
            docs-web/target/site/jacoco/jacoco.csv
            docs-web-common/target/site/jacoco/jacoco.csv

      - name: Log coverage percentage
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"
      
      - name: Commit badge
        run: |
          mkdir tmp
          cp .github/badges/*.svg tmp 
          git checkout -b badges
          mkdir -p badges
          cp ./tmp/*.svg badges
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add './badges/*.svg'
          git commit -m "Add/Update badge"
        continue-on-error: true

      - name: Push badge commit
        uses: ad-m/github-push-action@master
        if: success()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: badges
          force: true
      - name: Run java checkstyle
        uses: nikitasavinov/checkstyle-action@0.6.0

      
name: pitest
on:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'
      - '**.yml'
      - '**.yaml'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '8' ]
        architecture: [ 'x64' ]
    name: Mutation Testing with JDK ${{ matrix.java }} on ${{ matrix.architecture }}
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Setup JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
          architecture: ${{ matrix.architecture }}
          
      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Run Mutation Testing
        run: mvn package -Ppitest org.pitest:pitest-maven:mutationCoverage

- name: Deploy
  uses: peaceiris/actions-gh-pages@v3
  with:
    github_token: ${{ secrets.GITHUB_TOKEN }}
    publish_dir: ./target/pit-reports/*/
